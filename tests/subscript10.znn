// 12

template<T>
concept can_copy {
  T(T*);
};

template<T>
struct X {
};

template<T> requires can_copy<T>
T operator[](X<T> t, T a) {
  return a;
}

template<T>
struct Y {
  X<T> x;
};

X<int> fun() {
  return X<int>();
}

int main() {
  const x = X<int>();
  const y = Y<int>(X<int>());
  return 1 + x[1 + x[1 * 5]] + fun()[x[1] + 1] + y.x[1 + y.x[1] + 1];
}
