// 3

embed {
#include <memory>
using std::shared_ptr;
}


template <T>
extern struct shared_ptr {
  T mutable* get();
  shared_ptr(shared_ptr<T>*);
};

template <T>
shared_ptr<T> shared(T t) {
  embed {
    return std::make_shared<T>(std::move(t));
  }
}

int main() {
  const ptr = shared(3);
  const ptr2 = ptr;
  return *ptr2.get();
}
